From 03040dd7121909ded8348d48a11abd58326c29a0 Mon Sep 17 00:00:00 2001
From: EXL <exlmotodev@gmail.com>
Date: Sat, 7 Apr 2018 19:47:10 +0700
Subject: [PATCH] Add additional options to the context menu

Add turning page by mouse click option
Add all additional font sizes
Add "Apply" button to the settings dialog
Fix various bugs
---
 cr3qt/src/cr3widget.cpp  | 18 +++++++++++++++++-
 cr3qt/src/cr3widget.h    |  5 ++++-
 cr3qt/src/i18n/cr3_ru.ts |  4 ++++
 cr3qt/src/mainwindow.cpp |  6 ++++++
 cr3qt/src/settings.cpp   | 14 +++++++++++++-
 cr3qt/src/settings.h     |  6 +++++-
 cr3qt/src/settings.ui    | 17 ++++++++++++-----
 7 files changed, 61 insertions(+), 9 deletions(-)

diff --git a/cr3qt/src/cr3widget.cpp b/cr3qt/src/cr3widget.cpp
index 5ff1ef9d..86fa1a0b 100644
--- a/cr3qt/src/cr3widget.cpp
+++ b/cr3qt/src/cr3widget.cpp
@@ -342,6 +342,7 @@ CR3View::CR3View( QWidget *parent)
 void CR3View::updateDefProps()
 {
     _data->_props->setStringDef( PROP_WINDOW_FULLSCREEN, "0" );
+    _data->_props->setStringDef( PROP_PAGE_TURN_CLICK, "0" );
     _data->_props->setStringDef( PROP_WINDOW_SHOW_MENU, "1" );
     _data->_props->setStringDef( PROP_WINDOW_SHOW_SCROLLBAR, "1" );
     _data->_props->setStringDef( PROP_WINDOW_TOOLBAR_SIZE, "1" );
@@ -491,7 +492,6 @@ void CR3View::wheelEvent( QWheelEvent * event )
 
 void CR3View::resizeEvent ( QResizeEvent * event )
 {
-
     QSize sz = event->size();
     _docview->Resize( sz.width(), sz.height() );
 }
@@ -937,6 +937,11 @@ bool CR3View::saveHistory( QString fn )
     return _docview->getHistory()->saveToStream( stream.get() );
 }
 
+void CR3View::setUseClickForNextPage(bool value)
+{
+    _useClickForNextPage = value;
+}
+
 void CR3View::contextMenu( QPoint pos )
 {
 }
@@ -1058,6 +1063,12 @@ bool CR3View::updateSelection( ldomXPointer p )
 void CR3View::mousePressEvent ( QMouseEvent * event )
 {
     bool left = event->button() == Qt::LeftButton;
+
+    if (left && _useClickForNextPage) {
+        (event->x() < (size().width() / 2)) ? prevPage() : nextPage();
+        return;
+    }
+
     //bool right = event->button() == Qt::RightButton;
     bool mid = event->button() == Qt::MidButton;
     lvPoint pt (event->x(), event->y());
@@ -1102,6 +1113,11 @@ void CR3View::mousePressEvent ( QMouseEvent * event )
 void CR3View::mouseReleaseEvent ( QMouseEvent * event )
 {
     bool left = event->button() == Qt::LeftButton;
+
+    if (left && _useClickForNextPage) {
+        return;
+    }
+
     //bool right = event->button() == Qt::RightButton;
     //bool mid = event->button() == Qt::MidButton;
     lvPoint pt (event->x(), event->y());
diff --git a/cr3qt/src/cr3widget.h b/cr3qt/src/cr3widget.h
index e5562ca8..57657194 100644
--- a/cr3qt/src/cr3widget.h
+++ b/cr3qt/src/cr3widget.h
@@ -122,6 +122,8 @@ class CR3View : public QWidget, public LVDocViewCallback
         /// format progress, called with values 0..100
         virtual void OnFormatProgress( int percent );
 
+        void setUseClickForNextPage(bool value);
+
     public slots:
         void contextMenu( QPoint pos );
         void setScrollBar( QScrollBar * scroll );
@@ -186,7 +188,8 @@ class CR3View : public QWidget, public LVDocViewCallback
         QString _cssDir;
         QString _bookmarkDir;
         bool _editMode;
-		int _lastBatteryState;
+        int _lastBatteryState;
+        bool _useClickForNextPage;
 };
 
 #endif // CR3WIDGET_H
diff --git a/cr3qt/src/i18n/cr3_ru.ts b/cr3qt/src/i18n/cr3_ru.ts
index c5c5bef3..dc5f09d0 100644
--- a/cr3qt/src/i18n/cr3_ru.ts
+++ b/cr3qt/src/i18n/cr3_ru.ts
@@ -1380,6 +1380,10 @@ http://sourceforge.net/projects/crengine/
         <source>10</source>
         <translation>10</translation>
     </message>
+    <message>
+        <source>Turn pages by mouse click</source>
+        <translation>Переворачивать страницы кликом мышки</translation>
+    </message>
     <message>
         <source>15</source>
         <translation>15</translation>
diff --git a/cr3qt/src/mainwindow.cpp b/cr3qt/src/mainwindow.cpp
index d9394351..bab15df1 100644
--- a/cr3qt/src/mainwindow.cpp
+++ b/cr3qt/src/mainwindow.cpp
@@ -381,6 +381,9 @@ void MainWindow::onPropsChange( PropsRef props )
             if ( state != vv )
                 setWindowState( windowState() ^ Qt::WindowFullScreen );
         }
+        if ( name == PROP_PAGE_TURN_CLICK ) {
+            ui->view->setUseClickForNextPage( v );
+        }
         if ( name == PROP_WINDOW_SHOW_MENU ) {
             ui->menuBar->setVisible( v );
         }
@@ -416,6 +419,9 @@ void MainWindow::onPropsChange( PropsRef props )
 void MainWindow::contextMenu( QPoint pos )
 {
     QMenu *menu = new QMenu;
+    menu->addAction(ui->actionNextPage);
+    menu->addAction(ui->actionPrevPage);
+    menu->addSeparator();
     menu->addAction(ui->actionOpen);
     menu->addAction(ui->actionRecentBooks);
     menu->addAction(ui->actionTOC);
diff --git a/cr3qt/src/settings.cpp b/cr3qt/src/settings.cpp
index f75b5e2b..f94a3fd1 100644
--- a/cr3qt/src/settings.cpp
+++ b/cr3qt/src/settings.cpp
@@ -129,6 +129,7 @@ SettingsDlg::SettingsDlg(QWidget *parent, CR3View * docView ) :
     optionToUi( PROP_WINDOW_TOOLBAR_SIZE, m_ui->cbWindowShowToolbar );
     optionToUi( PROP_WINDOW_SHOW_STATUSBAR, m_ui->cbWindowShowStatusBar );
 
+    optionToUi( PROP_PAGE_TURN_CLICK, m_ui->cbTurnPageMouse );
     optionToUi( PROP_FOOTNOTES, m_ui->cbShowFootNotes );
     optionToUi( PROP_SHOW_BATTERY, m_ui->cbShowBattery );
     optionToUi( PROP_SHOW_TIME, m_ui->cbShowClock );
@@ -326,6 +327,13 @@ void SettingsDlg::on_buttonBox_accepted()
     close();
 }
 
+void SettingsDlg::on_buttonBox_clicked(QAbstractButton * button)
+{
+    if (m_ui->buttonBox->buttonRole( button ) == QDialogButtonBox::ApplyRole) {
+        m_docview->setOptions( m_props );
+    }
+}
+
 void SettingsDlg::optionToUi( const char * optionName, QCheckBox * cb )
 {
     int state = ( m_props->getIntDef( optionName, 1 ) != 0 ) ? 1 : 0;
@@ -683,6 +691,11 @@ void SettingsDlg::setCheckInversed( const char * optionName, int checkState )
     m_props->setInt( optionName, value );
 }
 
+void SettingsDlg::on_cbTurnPageMouse_stateChanged(int s)
+{
+    setCheck( PROP_PAGE_TURN_CLICK, s );
+}
+
 void SettingsDlg::on_cbWindowFullscreen_stateChanged(int s)
 {
     setCheck( PROP_WINDOW_FULLSCREEN, s );
@@ -924,7 +937,6 @@ void SettingsDlg::on_cbPageSkin_currentIndexChanged(int index)
         m_props->setString( PROP_BACKGROUND_IMAGE, m_backgroundFiles[index] );
 }
 
-
 void SettingsDlg::on_cbFloatingPunctuation_stateChanged(int s)
 {
     setCheck( PROP_FLOATING_PUNCTUATION, s );
diff --git a/cr3qt/src/settings.h b/cr3qt/src/settings.h
index b24d3287..630341ce 100644
--- a/cr3qt/src/settings.h
+++ b/cr3qt/src/settings.h
@@ -30,9 +30,11 @@ namespace Ui {
 #define PROP_WINDOW_SHOW_STATUSBAR  "window.statusbar.show"
 #define PROP_WINDOW_SHOW_SCROLLBAR  "window.scrollbar.show"
 #define PROP_WINDOW_STYLE           "window.style"
+#define PROP_PAGE_TURN_CLICK        "page.turn.click"
 #define PROP_APP_START_ACTION       "cr3.app.start.action"
 
-#define DECL_DEF_CR_FONT_SIZES static int cr_font_sizes[] = { 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 38, 42, 48, 56, 64, 72 }
+#define DECL_DEF_CR_FONT_SIZES static int cr_font_sizes[] = { 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, \
+    32, 33, 34, 35, 36, 37, 38, 42, 48, 56, 64, 72, 80, 96 }
 
 
 struct StyleItem {
@@ -191,8 +193,10 @@ private slots:
     void on_cbWindowShowMenu_stateChanged(int );
     void on_cbWindowShowToolbar_stateChanged(int );
     void on_cbWindowFullscreen_stateChanged(int );
+    void on_cbTurnPageMouse_stateChanged(int );
     void on_buttonBox_accepted();
     void on_buttonBox_rejected();
+    void on_buttonBox_clicked(QAbstractButton * button);
     void on_cbFloatingPunctuation_stateChanged(int );
     void on_cbFontGamma_currentIndexChanged(QString );
     void on_cbStyleName_currentIndexChanged(int index);
diff --git a/cr3qt/src/settings.ui b/cr3qt/src/settings.ui
index 3dc9c263..5cf9a265 100644
--- a/cr3qt/src/settings.ui
+++ b/cr3qt/src/settings.ui
@@ -9,8 +9,8 @@
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>433</width>
-    <height>651</height>
+    <width>454</width>
+    <height>809</height>
    </rect>
   </property>
   <property name="sizePolicy">
@@ -505,6 +505,13 @@
            </property>
           </spacer>
          </item>
+         <item>
+          <widget class="QCheckBox" name="cbTurnPageMouse">
+           <property name="text">
+            <string>Turn pages by mouse click</string>
+           </property>
+          </widget>
+         </item>
          <item>
           <widget class="QCheckBox" name="cbShowFootNotes">
            <property name="text">
@@ -1610,8 +1617,8 @@
              <rect>
               <x>0</x>
               <y>0</y>
-              <width>401</width>
-              <height>540</height>
+              <width>416</width>
+              <height>672</height>
              </rect>
             </property>
             <layout class="QVBoxLayout" name="verticalLayout_9">
@@ -1791,7 +1798,7 @@
       <enum>Qt::Horizontal</enum>
      </property>
      <property name="standardButtons">
-      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
+      <set>QDialogButtonBox::Apply|QDialogButtonBox::Cancel|QDialogButtonBox::Ok</set>
      </property>
     </widget>
    </item>
-- 
2.17.0

